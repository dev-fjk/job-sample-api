openapi: 3.0.1
info:
  title: 求人 サンプルAPI
  description: 求人PJ 事前学習用のAPIです
  version: v1
servers:
  - url: http://localhost:8080
    description: Generated server url
security:
  - JwtAuthHeader: []
tags:
  - name: /resume/v1
    description: ユーザーの職務経歴情報管理用API
  - name: /posted-company/v1/
    description: 応募情報管理用API
paths:
  /resume/v1/users/{userId}:
    get:
      tags:
        - /resume/v1
      summary: レジュメ情報を取得する
      operationId: getResume
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          $ref: '#/components/responses/internalServerError'
        "200":
          description: レジュメ取得結果 取得失敗時は空のJson Bodyを返す
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResumeResponse'
        "400":
          $ref: '#/components/responses/badRequest'
    put:
      tags:
        - /resume/v1
      summary: レジュメ情報を更新する
      operationId: updateResume
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeUpdateRequest'
        required: true
      responses:
        "404":
          $ref: '#/components/responses/notFound'
        "409":
          $ref: '#/components/responses/conflict'
        "500":
          $ref: '#/components/responses/internalServerError'
        "200":
          description: 更新したレジュメ情報を返す
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResumeResponse'
        "400":
          $ref: '#/components/responses/badRequest'
    post:
      tags:
        - /resume/v1
      summary: レジュメ情報を登録する
      operationId: addResume
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeAddRequest'
        required: true
      responses:
        "409":
          $ref: '#/components/responses/conflict'
        "500":
          $ref: '#/components/responses/internalServerError'
        "201":
          description: レジュメ登録成功 作成したリソースへのURIをlocationヘッダーに設定して返す
          headers:
            Location:
              description: /resume/v1/users/1
              required: true
              style: simple
          content:
            '*/*':
              schema:
                type: object
        "400":
          $ref: '#/components/responses/badRequest'
    delete:
      tags:
        - /resume/v1
      summary: レジュメ情報を削除する
      operationId: deleteResume
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          $ref: '#/components/responses/deletedSuccessfully'
        "404":
          $ref: '#/components/responses/notFound'
        "500":
          $ref: '#/components/responses/internalServerError'
        "400":
          $ref: '#/components/responses/badRequest'
  /posted-company/v1/companies/{cid}:
    put:
      tags:
        - /posted-company/v1/
      summary: 企業がユーザーの採用状況を更新する
      operationId: updatePostUser
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostedUpdateRequest'
        required: true
      responses:
        "204":
          $ref: '#/components/responses/updatedSuccessfully'
        "500":
          $ref: '#/components/responses/internalServerError'
        "400":
          $ref: '#/components/responses/badRequest'
  /posted-company/v1/users/{userId}/companies/{cid}:
    post:
      tags:
        - /posted-company/v1/
      summary: 企業へ応募する
      operationId: postUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: cid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          $ref: '#/components/responses/insertedSuccessfully'
        "500":
          $ref: '#/components/responses/internalServerError'
        "400":
          $ref: '#/components/responses/badRequest'
    delete:
      tags:
        - /posted-company/v1/
      summary: ユーザーの応募情報を削除する
      operationId: deletePosted
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: cid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          $ref: '#/components/responses/deletedSuccessfully'
        "500":
          $ref: '#/components/responses/internalServerError'
        "400":
          $ref: '#/components/responses/badRequest'
  /resume/v1/companies/{cid}:
    get:
      tags:
        - /resume/v1
      summary: 企業へ応募中のレジュメ一覧を取得する
      operationId: getPostedUserResumeList
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: start
          in: query
          description: "取得開始位置 1以上の値を設定 デフォルト: 1"
          required: false
          schema:
            type: integer
            format: int32
          example: 1
        - name: count
          in: query
          description: "取得件数 0~100の範囲で値を設定 デフォルト: 20"
          required: false
          schema:
            type: integer
            format: int32
          example: 20
        - name: userIdList
          in: query
          description: ユーザーIDリスト カンマ区切りで複数指定可能 デフォルト:空
          required: false
          schema:
            type: list
            format: int64
        - name: selectionStatus
          in: query
          description: "選考状況 カンマ区切りの数値か *を設定 0:採用前,1:選考中,2:採用,9:不採用, *:全指定 デフォルト: *"
          required: false
          schema:
            type: string
        - name: postedDateFrom
          in: query
          description: 応募日時の絞り込み開始時刻 ISO8601拡張形式
          required: false
          schema:
            type: string
            format: date-time
          example: 2022-04-30T00:00:00
        - name: postedDateTo
          in: query
          description: 応募日時の絞り込み終了時刻 ISO8601拡張形式
          required: false
          schema:
            type: string
            format: date-time
          example: 2022-04-30T23:59:59
      responses:
        "200":
          description: レジュメ一覧取得結果
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostedResumeListResponse'
        "500":
          $ref: '#/components/responses/internalServerError'
        "400":
          $ref: '#/components/responses/badRequest'
components:
  schemas:
    ResumeUpdateRequest:
      required:
        - birthDate
        - firstName
        - lastName
      type: object
      properties:
        lastName:
          type: string
          description: 苗字
          example: 苗字
        firstName:
          type: string
          description: 名前
          example: 名前
        birthDate:
          type: string
          description: 生年月日 ISO8601拡張形式
          format: date
          example: 1990-09-10
        jobDescription:
          type: string
          description: 職務要約
          example: プログラマーとして働いていました
      description: レジュメ更新リクエスト
    ResumeResponse:
      type: object
      properties:
        userID:
          type: integer
          description: ユーザーID
          format: int64
          example: 1
        lastName:
          type: string
          description: 苗字
          example: 苗字
        firstName:
          type: string
          description: 名前
          example: 名前
        birthDate:
          type: string
          description: 生年月日 yyyy-MM-ddの形式
          example: 1990-10-10
        jobDescription:
          type: string
          description: 職務要約
          example: プログラマーとして働いていました。
      description: レジュメ情報レスポンス
    PostedUpdateRequest:
      type: object
      properties:
        resumes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostedUserResume'
      description: 応募状況更新リクエスト
    PostedUserResume:
      required:
        - selectionStatus
      type: object
      properties:
        userId:
          type: integer
          description: ユーザーID
          format: int64
          example: 1
        selectionStatus:
          $ref: '#/components/schemas/SelectionStatus'
      description: 応募中のレジュメ
    SelectionStatus:
      type: string
      description: "選考状況: \n* `0` - 選考前\n* `1` - 選考中\n* `2` - 採用\n* `9` - 不採用\n"
      example: "1"
      enum:
        - "0"
        - "1"
        - "2"
        - "9"
        - Invalid
    ResumeAddRequest:
      required:
        - birthDate
        - firstName
        - lastName
      type: object
      properties:
        lastName:
          type: string
          description: 苗字
          example: 苗字
        firstName:
          type: string
          description: 名前
          example: 名前
        birthDate:
          type: string
          description: 生年月日 ISO8601拡張形式
          format: date
          example: 1990-09-10
        jobDescription:
          type: string
          description: 職務要約
          example: プログラマーとして働いていました
      description: レジュメ追加リクエスト
    PostedResume:
      type: object
      properties:
        userID:
          type: integer
          description: ユーザーID
          format: int64
          example: 1
        lastName:
          type: string
          description: 苗字
          example: 苗字
        firstName:
          type: string
          description: 名前
          example: 名前
        birthDate:
          type: string
          description: 生年月日 yyyy-MM-ddの形式
          example: 1990-10-10
        jobDescription:
          type: string
          description: 職務要約
          example: プログラマーとして働いていました。
        postedDate:
          type: string
          description: 応募日時 ISO8601形式の日付文字列
          example: 2022-04-30T12:00:00
        selectionStatusId:
          type: string
          description: "選考状況ID 0:採用前,1:選考中,2:採用,9:不採用"
          example: "1"
        selectionStatusName:
          type: string
          description: 選考状況表示名
          example: 選考中
      description: 企業に応募しているレジュメ
    PostedResumeListResponse:
      type: object
      properties:
        total:
          type: integer
          description: 総件数
          format: int32
          example: 100
        start:
          type: integer
          description: 取得開始位置
          format: int32
          example: 1
        count:
          type: integer
          description: 取得件数
          format: int32
          example: 20
        resumes:
          type: array
          items:
            $ref: '#/components/schemas/PostedResume'
      description: 企業に応募しているレジュメ一覧レスポンス
    ProblemResponse:
      type: object
      properties:
        title:
          type: string
          description: 問題の要素
          example: リソースが見つかりません
        status:
          type: integer
          description: HTTPレスポンスコード
          format: int32
          example: 404
        detail:
          type: string
          description: 問題の詳細
          example: 指定されたクイズが見つかりません
      description: RFC7807準拠のエラー詳細
  responses:
    badRequest:
      description: リクエストパラメータが不正
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
          example: "{\"title\":\"リクエストされたパラメータは正しくありません\",\"status\":400,\"detail\"\
            :\"userIdは必須項目です\"}"
    unauthorized:
      description: 認証情報がリクエストに付与されていない
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
          example: "{\"title\":\"認証に失敗しました\",\"status\":401,\"detail\":\"認証情報が付与され\
            ていません\"}"
    forbidden:
      description: 許可されていないアクセス
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
          example: "{\"title\":\"アクセスが拒否されました\",\"status\":403,\"detail\":\"アクセスする\
            権限がありません\"}"
    notFound:
      description: リソースが見つからない
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
          example: "{\"title\":\"リクエストされたリソースは見つかりませんでした\",\"status\":404,\"detail\"\
            :\"レジュメが見つかりませんでした\"}"
    conflict:
      description: リソースが既に存在する
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
          example: "{\"title\":\"リソースが既に存在します\",\"status\":409,\"detail\":\"既にレジュメ\
            が登録されています\"}"
    internalServerError:
      description: 処理が正常に終了しなかった
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
          example: "{\"title\":\"リクエストされた操作を完了できませんでした\",\"status\":500,\"detail\"\
            :\"データベースでエラーが発生しました\"}"
    insertedSuccessfully:
      description: 正常に追加できた
    updatedSuccessfully:
      description: 正常に更新できた
    deletedSuccessfully:
      description: 正常に削除できた
